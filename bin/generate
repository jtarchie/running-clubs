#!/usr/bin/env ruby
# frozen_string_literal: true

require 'erb'
require 'optparse'
require 'uri'
require_relative '../lib/facebook'

options = {}
opts_parser = OptionParser.new do |opts|
  opts.on('-o', '--output-dir DIRECTORY', 'output directory to place mkdocs site into') do |v|
    options[:output_dir] = v
  end
end
opts_parser.parse!
raise '--output-dir is required' unless options[:output_dir]

facebook = Facebook.new(
  username: ENV.fetch('FACEBOOK_USERNAME'),
  password: ENV.fetch('FACEBOOK_PASSWORD')
)

facebook.login!

Group = Struct.new(:id, :name)
groups_by_city = {
  Denver: [
    Group.new('112582942107236', 'Foothills Running and Cycling Club'),
    Group.new('124886367564642', 'Highland Tap and Burger Run Club'),
    Group.new('1528173973929011', 'Runners Roost Stapleton'),
    Group.new('1743154215930862', 'Arvada Runners'),
    Group.new('201896876473', 'Boulder Running Company @ Greenwood Village'),
    Group.new('305158679071', 'Runners Roost Lone Tree'),
    Group.new('338344882975485', 'Boulder Running Company @ Cherry Creek'),
    Group.new('918204988192108', 'Denver Trail Runners'),
    Group.new('BPRunCO', 'Berkeley Park Running Company'),
    Group.new('Dirty30Running', 'Dirty 30 Running'),
    Group.new('RunnersRoostCO', 'Runners Roost'),
    Group.new('RunnersRoostLakewood', 'Runners Roost Lakewood'),
    Group.new('lookoutmountainrunners', 'Golden Mountain Runners'),
  ],
  Boulder: [
    Group.new('BoulderRunningCompany', 'Boulder Running Company')
  ]
}

output_dir = options[:output_dir]
system("rm -Rf #{output_dir}")
system("mkdocs new --verbose #{output_dir}")
system("cp assets/favicon.ico #{File.join(output_dir, 'docs')}")

cutoff_time = Time.now + 30 * 24 * 3600

Dir.chdir(output_dir) do
  groups_by_city.each_with_index do |(city, groups), index|
    events_by_groups = Hash[groups.map do |group|
      events = facebook.events(id: group.id).select do |event|
        event[:date] && event[:date] < cutoff_time
      end
      [group, events]
    end]

    filename = "#{city.to_s.downcase}.md"
    filename = 'index.md' if index == 0
    File.write(File.join('docs', filename), ERB.new(<<~MARKDOWN).result(binding))
      ---
      title: <%= city %>
      date: #{Time.now.to_date}
      authors:
      - JT
      ---
      # <%= city %> Running Clubs
      <% events_by_groups.each do |group, events| %>
      <% next if events.length == 0 %>
      ## <%= group.name %>
       <% events.each do |event| %>
      ### <a href="<%= event[:link] %>"><%= event[:title] %></a>
       Start: <%= event[:date] %>

       <% if event[:location] %>
       Location: [<%= event[:location] %>](https://www.google.com/maps?q=<%= URI.escape(event[:location]) %>)
       <% end %>

       <%= event[:description] %>
      <% end %>
      <% end %>
    MARKDOWN
  end

  config = YAML.load_file('mkdocs.yml')
  config['site_name'] = 'Running Clubs'
  config['theme'] = {
    'name' => 'material',
    'favicon' => '/favicon.ico',
    'logo' => '/favicon.ico',
    'palette' => {
      'primary' => 'blue',
      'accent' => 'light blue'
    }
  }
  config['edit_uri'] = nil
  config['strict'] = true
  config['repo_url'] = 'https://github.com/jtarchie/running-clubs'
  File.write('mkdocs.yml', YAML.dump(config))
  raise 'Cannot build' unless system('mkdocs build')

  Dir.chdir('site') do
    File.write('CNAME', 'denverrunners.com')

    system('git init')
    system('git remote add origin git@github.com:jtarchie/running-clubs.git')
    system('git add -A')
    system('git co -b gh-pages')
    system('git commit -m "updated"')
    system('git push origin gh-pages -f')
  end
end
