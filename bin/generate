#!/usr/bin/env ruby
# frozen_string_literal: true

require 'erb'
require 'optparse'
require 'uri'
require 'toml'
require 'kramdown'
require_relative '../lib/facebook'

options = {}
opts_parser = OptionParser.new do |opts|
  opts.on('-o', '--output-dir DIRECTORY', 'output directory to place site into') do |v|
    options[:output_dir] = v
  end
  opts.on('-c', '--cache', 'cache the scraping') do |_v|
    options[:cache] = true
  end
end
opts_parser.parse!
raise '--output-dir is required' unless options[:output_dir]

facebook = Facebook.new(
  username: ENV.fetch('FACEBOOK_USERNAME'),
  password: ENV.fetch('FACEBOOK_PASSWORD'),
  cache: options[:cache]
)

facebook.login!

Group = Struct.new(:id, :name)
groups_by_city = {
  Denver: [
    Group.new('112582942107236', 'Foothills Running and Cycling Club'),
    Group.new('124886367564642', 'Highland Tap and Burger Run Club'),
    Group.new('1528173973929011', 'Runners Roost Stapleton'),
    Group.new('1743154215930862', 'Arvada Runners'),
    Group.new('201896876473', 'Boulder Running Company @ Greenwood Village'),
    Group.new('305158679071', 'Runners Roost Lone Tree'),
    Group.new('338344882975485', 'Boulder Running Company @ Cherry Creek'),
    Group.new('918204988192108', 'Denver Trail Runners'),
    Group.new('BPRunCO', 'Berkeley Park Running Company'),
    Group.new('Dirty30Running', 'Dirty 30 Running'),
    Group.new('RunnersRoostCO', 'Runners Roost'),
    Group.new('RunnersRoostLakewood', 'Runners Roost Lakewood'),
    Group.new('lookoutmountainrunners', 'Golden Mountain Runners')
  ],
  Boulder: [
    Group.new('BoulderRunningCompany', 'Boulder Running Company')
  ]
}

output_dir = options[:output_dir]
system("rm -Rf #{output_dir} && mkdir -p #{output_dir}")
system("cp assets/favicon.ico #{output_dir}")

cutoff_time = Time.now + 30 * 24 * 3600

Dir.chdir(output_dir) do
  events_by_city = groups_by_city.map do |(city, groups)|
    events_by_date = groups.flat_map do |group|
      facebook.events(id: group.id).select do |event|
        event[:date] && event[:date] < cutoff_time
      end
    end.group_by do |event|
      event[:date].to_date.to_s
    end
    [city, events_by_date]
  end.to_h

  File.write('index.html', ERB.new(DATA.read).result(binding))
  File.write('CNAME', 'denverrunners.com')

  system('git init')
  system('git remote add origin git@github.com:jtarchie/running-clubs.git')
  system('git add -A')
  system('git co -b gh-pages')
  system('git commit -m "updated"')
  system('git push origin gh-pages -f')
end

__END__
<html>
<head>
  <title>Colorado Running Clubs</title>
  <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/mini.css/3.0.1/mini-default.min.css">
  <meta name="viewport" content="width=device-width, initial-scale=1">
  <link rel="shortcut icon" href="/favicon.ico">
</head>
<body>
  <header class="row">
    <a href="/" class="button logo">Running Clubs</a>
    <a href="#about" class="button">About</a>
    <% events_by_city.each do |city, _| %>
    <a href="#<%= city.to_s.downcase %>" class="button"><%= city %></a>
    <% end %>
  </header>
  <div class="container">
    <div class="col-sm-12 col-md-10 col-md-offset-1 col-lg-8 col-lg-offset-2">
      <h1 id="about">About</h1>
      <p>Boulder has a large running community. It is daunting to navigate all the meetups and events.</p>
      <p>Boulder Runners aggregates running groups, stores, etc. for convenience. Hoping to help grow the community.</p>
      <% events_by_city.each do |city, events_by_dates| %>
        <h1 id="<%= city.to_s.downcase %>"><%= city %></h1>
          <% events_by_dates.each do |date, events| %>
            <h2><%= date %></h2>
            <% events.each do |event| %>
              <h3><a href="<%= event[:link] %>" title="<%= event[:title] %>" target="_blank" rel="noopener"><%= event[:title] %></a></h3>
              <p>Start: <%= event[:date] %></p>
              <% if event[:location] %>
                <p>Location: <a href="https://www.google.com/maps?q=<%= URI.escape(event[:location]) %>" target="_blank" rel="noopener"><%= event[:location] %></a></p>
              <% end %>
              <%= Kramdown::Document.new(event[:description] || '').to_html %>
            <% end %>
          <% end %>
      <% end %>
    </div>
  </div>
</body>
</html>
